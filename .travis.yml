# Configuration file for TravisCI

# We use miniconda for Python so don't need any Python specific tools
language: generic

# Use the container builds so we don't need sudo priviledges
sudo: false

# Only build pushes to the master branch and tags. This avoids the double
# builds than happen when working on a branch instead of a fork.
branches:
    only:
        - master
        # Regex to build tagged commits with version numbers
        - /\d+\.\d+(\.\d+)?(\S*)?$/

# Store datasets between builds to avoid downloading every time the tests are run
cache:
    directories:
        - $HOME/.rockhound/data

# Define environment variables common to all builds
env:
    global:
        # Encrypted variables
        # Doctr deploy key for leouieda/test-doctr
        - secure: "DYcwHwntO4sZgEM823calX8n9CnuwFJLzBfl0W5CeP/RhR4oXHRJPSZh4qTUcRERCPIXlbfJ1zAGz22WQE4MG8Py2amhPkUZdS05Fm7UcfnuD6OXSxFAdCQXFMlQgliVLVPE/0L8znoGkWge2j9FylTx85KKdL80S7LMndAm0AacyhhYgm0hSzDgB+8q9tNlUB7iJtbMzuKGQOD3VokVIM65I9tH5WXws8OYUzqv5VS6GlNbKFSzFhYLKxXne392XtwwvJjHb7Yz5CYTjxiI5F4EFnuz8mudgrtvxb1C9FipgsycFtj7+onEtUwxJq5GkVKiRjdOCwqDUYqK6poHzPLEolCGOkoGDTVOnZY9lCbRcci3kLtjSBmWq5qYwv2Klov0GNuxYHq18zaOPxIPsGWUQjh3Rqgpp3Uz6BnSHmHqOz4ZS9CTVldotBhlgTyRcj90Xq0pLkhjEc854U7Y67p22Pas76NaytGw1udA21wWmNR3ioVwdV+4MQae/UNFokCim1soIreUy1sVs2zZBNPoR1uFsgNNcj3sZfWEavocEqnNUiyONaA/dNCzuTOSMwNIi+5UzlP10oU7AwLBMao60JSpMPgnv6TmL6D3/Tc/OznfXDEnST56Nx2fK+lFAd4MdISAcbYT3BXZgF/lhSLpGqkroK5/R2G1jgvRENc="
        - TWINE_USERNAME=Leonardo.Uieda
        # The files with the listed requirements to be installed by conda
        - CONDA_REQUIREMENTS=requirements.txt
        - CONDA_REQUIREMENTS_DEV=requirements-dev.txt
        # These variables control which actions are performed in a build
        - DEPLOY_DOCS=false
        - DEPLOY_PYPI=false

# Specify the build configurations. Be sure to only deploy from a single build.
matrix:
    include:
        # Main build to deploy to PyPI and Github pages
        - name: "Linux - Python 3.6 (deploy)"
          os: linux
          env:
              - PYTHON=3.6
              - DEPLOY_DOCS=true
              - DEPLOY_PYPI=true

# Setup the build environment
before_install:
    # Copy sample data to the verde data dir to avoid downloading all the time
    # Get the Fatiando CI scripts
    - git clone --branch=1.1.1 --depth=1 https://github.com/fatiando/continuous-integration.git
    # Download and install miniconda and setup dependencies
    # Need to source the script to set the PATH variable globaly
    - source continuous-integration/travis/setup-miniconda.sh
    # Show installed pkg information for postmortem diagnostic
    - conda list

# Install the package that we want to test
install:
    # Make a binary wheel for our package and install it
    - python setup.py bdist_wheel
    - pip install dist/*

# Run the actual tests and checks
script:
    # Build the documentation
    - make -C doc clean all

# Deploy
deploy:
    # Push the built HTML in doc/_build/html to the gh-pages branch
    - provider: script
      script: deploy-gh-pages.sh
      skip_cleanup: true
      on:
          branch: master
          condition: '$DEPLOY_DOCS == "true"'
    # Push HTML when building tags as well
    - provider: script
      script: deploy-gh-pages.sh
      skip_cleanup: true
      on:
          tags: true
          condition: '$DEPLOY_DOCS == "true"'

# Don't send out emails every time a build fails
notifications:
    email: false
